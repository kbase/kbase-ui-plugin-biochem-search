{"version":3,"sources":["Tab.js","Tabs.js","BiochemistryTable.js","CompoundTable.js","ReactionTable.js","App.js","serviceWorker.js","index.js"],"names":["Tab","onClick","_this$props","_this","props","label","this","_this$props2","activeTab","className","react_default","a","createElement","Component","Tabs","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onClickTabItem","tab","setState","state","children","map","child","src_Tab","key","BiochemistryTable","handleChange","event","search_text","target","value","handleKeyPress","keyCode","which","doSearch","handleClick","table_items","message","_this2","axios","get","githubURL","then","response","data","concat","length","toLocaleString","_this3","post","relationEngineURL","all_documents","offset","result_limit","include_obsolete","results","loadAll","type","placeholder","onChange","onKeyPress","lib_default","keyField","headerClasses","columns","pagination","paginationFactory","expandRow","CompoundTable","imgFormatter","cell","row","src","alt","style","height","onError","i","aliasFormatter","String","replace","renderer","id","list-style-type","abbreviation","deltag","deltagerr","pka","pkb","inchikey","smiles","is_core","is_cofactor","is_obsolete","source","showExpandColumn","onlyOneExpanding","dataField","text","sort","formatter","src_BiochemistryTable","ReactionTable","renderCompound","comp_txt","_$exec","exec","_$exec2","slicedToArray","stoic","cid","Fragment","reactionImage","_row$code$split","code","split","_row$code$split2","reactants","products","sign","direction","renderHalfRxn","definition","reversibility","is_transport","compounds","reduce","prev","curr","App","src_Tabs","src_CompoundTable","src_ReactionTable","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b950e3b3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Tab extends Component {\n  static propTypes = {\n    activeTab: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n  };\n\n  onClick = () => {\n    const { label, onClick } = this.props;\n    onClick(label);\n  };\n\n  render() {\n    const {\n      onClick,\n      props: {\n        activeTab,\n        label,\n      },\n    } = this;\n\n    let className = 'tab-list-item';\n\n    if (activeTab === label) {\n      className += ' tab-list-active';\n    }\n\n    return (\n      <li\n        className={className}\n        onClick={onClick}\n      >\n        {label}\n      </li>\n    );\n  }\n}\n\n\nexport default Tab;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Tab from './Tab';\n\nclass Tabs extends Component {\n  static propTypes = {\n    children: PropTypes.instanceOf(Array).isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTab: this.props.children[0].props.label,\n    };\n  };\n\n  onClickTabItem = (tab) => {\n    this.setState({ activeTab: tab });\n  };\n\n  render() {\n    const {\n      onClickTabItem,\n      props: {\n        children,\n      },\n      state: {\n        activeTab,\n      }\n    } = this;\n\n    return (\n      <div className=\"tabs\">\n        <ol className=\"tab-list\">\n          {children.map((child) => {\n            const { label } = child.props;\n\n            return (\n              <Tab\n                activeTab={activeTab}\n                key={label}\n                label={label}\n                onClick={onClickTabItem}\n              />\n            );\n          })}\n        </ol>\n        <div className=\"tab-content\">\n          {children.map((child) => {\n            if (child.props.label !== activeTab) return undefined;\n            return child.props.children;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tabs;","import React, { Component } from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport axios from 'axios';\n\nclass BiochemistryTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            table_items: [],\n            search_text: '',\n            message: 'Loading...',\n        };\n    };\n\n    handleChange = (event) => {\n        this.setState({search_text: event.target.value});\n    };\n\n    handleKeyPress = (event) => {\n        if (event.keyCode === 13 || event.which === 13) {\n            this.doSearch();\n        }\n    };\n\n    handleClick = (event) => {\n        this.doSearch();\n    };\n\n    loadAll(){\n        // This is a bit of a hack but the static compounds file from github has the same content and is MUCH faster to load\n        axios.get(this.props.githubURL)\n            .then(response => {\n                this.setState({\n                    table_items: response.data,\n                    message: `${response.data.length.toLocaleString()} items found`\n                });\n            });\n    };\n\n    doSearch() {\n        if (!this.state.search_text){\n            this.loadAll();\n        }\n        else {\n            axios.post(this.props.relationEngineURL,\n                {\n                    \"search_text\": this.state.search_text,\n                    \"all_documents\": 0,\n                    \"offset\": 0,\n                    \"result_limit\": 9999999,\n                    \"include_obsolete\": 1\n                })\n                .then(response => {\n                    this.setState({\n                        table_items: response.data.results,\n                        message: `${response.data.results.length.toLocaleString()} items found`\n                    });\n                });\n        }\n    };\n\n    componentDidMount() {\n        this.loadAll();\n    };\n\n    render() {\n        return (\n            <div>\n                <div className='row'>\n                    <div className=\"col\">\n                        <h5>{this.state.message}</h5>\n                    </div>\n                    <div className=\"col mb-3 input-group form-inline justify-content-end\">\n                        <input className='form-control'\n                               type=\"text\"\n                               placeholder=\"Search...\"\n                               value={this.state.search_text}\n                               onChange={this.handleChange}\n                               onKeyPress={this.handleKeyPress}\n                        />\n                        <div className='input-group-append' onClick={this.handleClick}>\n                            <button className=\"input-group-text\">\n                                <i className=\"fa fa-search\"></i>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <BootstrapTable\n                    keyField='id'\n                    headerClasses='table-header'\n                    data={ this.state.table_items }\n                    columns={ this.props.columns }\n                    pagination={ paginationFactory() }\n                    expandRow={ this.props.expandRow }\n                />\n            </div>\n        );\n    }\n}\n\nexport default BiochemistryTable;\n","import React, { Component } from 'react';\nimport BiochemistryTable from \"./BiochemistryTable\";\n\nclass CompoundTable extends Component {\n    imgFormatter = (cell, row) => {\n        return (\n            <img src={`http://minedatabase.mcs.anl.gov/compound_images/ModelSEED/${cell}.png`}\n                alt=\"\" style={{height: '100px'}} onError={i => i.target.src=''}/>\n        );\n    };\n\n    aliasFormatter = (cell, row) => {\n        return (\n            <span>{String(cell).replace(/\\|/g, ', ').replace(/;/g, '\\n')}</span>\n        );\n    };\n\n    expandRow = {\n        renderer: row => {\n            return (\n                <div className=\"row\">\n                    <div className=\"col-sm-4\">\n                        <img src={`http://minedatabase.mcs.anl.gov/compound_images/ModelSEED/${row.id}.png`}\n                             alt=\"\" onError={i => i.target.src=''} className='compound-detail-image'/>\n                    </div>\n                    <div className=\"col-sm-8\">\n                        <ul style={{'list-style-type': 'none'}}>\n                            <li><strong>Abbreviation:</strong> {row.abbreviation}</li>\n                            <li><strong>DeltaG:</strong> {row.deltag}</li>\n                            <li><strong>DeltaG Error:</strong> {row.deltagerr}</li>\n                            <li><strong>pKa:</strong> {row.pka}</li>\n                            <li><strong>pKb:</strong> {row.pkb}</li>\n                            <li><strong>InChIKey:</strong> {row.inchikey}</li>\n                            <li><strong>SMILES:</strong> {row.smiles}</li>\n                            <li><strong>Is Core:</strong> {row.is_core}</li>\n                            <li><strong>Is Cofactor:</strong> {row.is_cofactor}</li>\n                            <li><strong>Is Obsolete:</strong> {row.is_obsolete}</li>\n                            <li><strong>Source:</strong> {row.source}</li>\n                        </ul>\n                    </div>\n                </div>\n            )},\n        showExpandColumn: true,\n        onlyOneExpanding: true\n    };\n\n    state = {\n        table_items: [],\n        search_text: '',\n        message: 'Loading...',\n        columns: [{\n            dataField: 'id',\n            text: 'ID',\n            sort: true,\n        }, {\n            dataField: 'id',\n            text: 'Image',\n            formatter: this.imgFormatter\n        }, {\n            dataField: 'name',\n            text: 'Name',\n            sort: true,\n        }, {\n            dataField: 'formula',\n            text: 'Formula',\n            sort: true,\n        }, {\n            dataField: 'mass',\n            text: 'Mass',\n            sort: true,\n        }, {\n            dataField: 'charge',\n            text: 'Charge',\n            sort: true,\n        }, {\n            dataField: 'aliases',\n            text: 'Aliases',\n            formatter: this.aliasFormatter,\n        }]\n    };\n\n    render() {\n        return (\n            <BiochemistryTable\n                columns={this.state.columns}\n                expandRow={this.expandRow}\n                githubURL={'https://raw.githubusercontent.com/ModelSEED/ModelSEEDDatabase/dev/Biochemistry/compounds.json'}\n                relationEngineURL={'https://ci.kbase.us/services/relation_engine_api/api/query_results/?view=search_compounds&batch_size=9999999'}\n            />\n        );\n    }\n}\n\nexport default CompoundTable;\n","import React, { Component } from 'react';\nimport BiochemistryTable from \"./BiochemistryTable\";\n\n\nclass ReactionTable extends Component {\n    aliasFormatter = (cell, row) => {\n        return <span>{String(cell).replace(/\\|/g, ', ').replace(/;/g, '\\n')}</span>\n    };\n\n    renderCompound = (comp_txt) => {\n        const [_, stoic, cid] = /(\\([0-9.]+\\)) (\\w+)/.exec(comp_txt);\n        return (\n            <React.Fragment>\n                <div className={'col-md-auto p-0'}>\n                    {stoic}\n                </div>\n                <div className={'col-md-auto'}>\n                    <img src={`http://minedatabase.mcs.anl.gov/compound_images/ModelSEED/${cid}.png`}\n                         alt=\"\" style={{height: '110px'}} onError={i => i.target.src=''}/>\n                </div>\n            </React.Fragment>\n        )\n\n    };\n\n    renderHalfRxn(compounds){\n        return compounds.split(\"+\")\n            .map(i => {return this.renderCompound(i)})\n            .reduce((prev, curr) => [prev, <h4 className='col-md-auto'> + </h4>, curr])\n    };\n\n    reactionImage = (row) => {\n        const [reactants, products] = row.code.split(\" <=> \");\n        let sign = '↔';\n        if (row.direction === \">\") {\n            sign = '→';\n        } else if (row.direction === \"<\") {\n            sign = '←';\n        }\n        return (\n            <div className=\"container\">\n                <div className=\"row align-items-center\">\n                    {this.renderHalfRxn(reactants)}\n                    <h4 className='col-md-auto'>{sign}</h4>\n                </div>\n                <div className=\"row align-items-center\">\n                    {this.renderHalfRxn(products)}\n                </div>\n            </div>\n        )\n    };\n\n    expandRow = {\n        renderer: row => {\n            return (\n                <div className=\"row\">\n                    <div className=\"col-sm\">\n                        {this.reactionImage(row)}\n                    </div>\n                    <div className=\"col-sm\">\n                        <ul style={{'list-style-type': 'none'}}>\n                            <li><strong>Abbreviation:</strong> {row.abbreviation}</li>\n                            <li><strong>Reaction definition:</strong> {row.definition}</li>\n                            <li><strong>DeltaG:</strong> {row.deltag}</li>\n                            <li><strong>DeltaG Error:</strong> {row.deltagerr}</li>\n                            <li><strong>Direction:</strong> {row.direction}</li>\n                            <li><strong>Reversibility:</strong> {row.reversibility}</li>\n                            <li><strong>Is Transport:</strong> {row.is_transport}</li>\n                            <li><strong>Is Obsolete:</strong> {row.is_obsolete}</li>\n                            <li><strong>Source:</strong> {row.source}</li>\n                        </ul>\n                    </div>\n                </div>\n            )},\n        showExpandColumn: true,\n        onlyOneExpanding: true\n    };\n\n    state = {\n        table_items: [],\n        search_text: '',\n        columns: [{\n            dataField: 'id',\n            text: 'ID',\n            sort: true,\n        }, {\n            dataField: 'name',\n            text: 'Name',\n            sort: true,\n        }, {\n            dataField: 'equation',\n            text: 'Equation',\n        }, {\n            dataField: 'deltag',\n            text: 'deltaG',\n            sort: true,\n        }, {\n            dataField: 'status',\n            text: 'Status',\n            sort: true,\n        }, {\n            dataField: 'aliases',\n            text: 'Aliases',\n            formatter: this.aliasFormatter,\n        }]\n    };\n\n    render() {\n        return (\n            <BiochemistryTable\n                columns={this.state.columns}\n                expandRow={this.expandRow}\n                githubURL={'https://raw.githubusercontent.com/ModelSEED/ModelSEEDDatabase/dev/Biochemistry/reactions.json'}\n                relationEngineURL={'https://ci.kbase.us/services/relation_engine_api/api/query_results/?view=search_reactions&batch_size=9999999'}\n            />\n        );\n    }\n}\n\nexport default ReactionTable;\n","import React, { Component } from 'react';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/@fortawesome/fontawesome-free/css/all.min.css';\nimport Tabs from './Tabs';\nimport CompoundTable from './CompoundTable';\nimport ReactionTable from './ReactionTable';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container m-3 p-0\">\n        <Tabs>\n          <div label=\"Compounds\">\n            <CompoundTable/>\n          </div>\n          <div label=\"Reactions\">\n            <ReactionTable/>\n          </div>\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}